#!/usr/bin/env bash

set -o pipefail -eux

main() {
  ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
  source "${ROOT}/set-bosh-env" "${VARFILE}"
  source "${ROOT}/credhub-login" "${VARFILE}"

  deployment_name="$(bosh int "${VARFILE}" --path "/deployment_name")"
  cluster="$(bosh int "${VARFILE}" --path=/director_name)/${deployment_name}"

  if [[ "x${API_URL}" == "x"  ]]; then
    host="$(bosh int "${VARFILE}" --path=/api-hostname)"
    port="$(bosh int "${VARFILE}" --path=/api-hostport)"
    API_URL="https://${host}:${port}"
  fi

  tmp_ca_file="$(mktemp)"
  bosh int <(credhub get -n "${cluster}/tls-kubernetes" --output-json) --path=/value/ca > "${tmp_ca_file}"
  admin_password=$(bosh int <(credhub get -n "${cluster}/kubo-admin-password" --output-json) --path=/value)

  cluster_name="cfcr/${cluster}"
  user_name="${cluster_name}/cfcr-admin"
  context_name="${cluster_name}"

  kubectl config set-cluster "${cluster_name}" --server="${API_URL}" --certificate-authority="${tmp_ca_file}" --embed-certs=true
  kubectl config set-credentials "${user_name}" --token="${admin_password}"
  kubectl config set-context "${context_name}" --cluster="${cluster_name}" --user="${user_name}"
  kubectl config use-context "${context_name}"
}

main
